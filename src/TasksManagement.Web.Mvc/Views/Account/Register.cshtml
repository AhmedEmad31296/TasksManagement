@using Abp.Authorization.Users;
@model TasksManagement.Web.Models.Account.RegisterViewModel
@{
    ViewBag.Title = L("Register");
}
<form id="RegisterForm" asp-action="Register" method="post">
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-warning"></i> @ViewBag.ErrorMessage
        </div>
    }
    <section id="regestration" class="auth-height">
        <div class="row full-height-vh m-0">
            <div class="col-12 d-flex align-items-center justify-content-center">
                <div class="card overflow-hidden">
                    <div class="card-content">
                        <div class="card-body auth-img">
                            <div class="row m-0">
                                <div class="col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2">
                                    <img src="~/img/gallery/register.png" alt="" class="img-fluid" width="350" height="230">
                                </div>
                                <div class="col-lg-6 col-md-12 px-4 py-3">
                                    <h4 class="card-title mb-2">@L("CreateAccount")</h4>
                                    <p>@L("FillFormToCreateNewAccount")</p>
                                    <input type="hidden" name="IsExternalLogin" value="@Model.IsExternalLogin.ToString()" />
                                    <input type="hidden" name="ExternalLoginAuthSchema" value="@Model.ExternalLoginAuthSchema" />
                                    <input type="text" class="form-control mb-2" placeholder="@L("Name")" value="@Model.Name" required maxlength="@AbpUserBase.MaxNameLength">
                                    <input type="text" class="form-control mb-2" placeholder="@L("Surname")" value="@Model.Surname" required maxlength="@AbpUserBase.MaxSurnameLength">
                                    <input type="email" class="form-control mb-2" placeholder="@L("EmailAddress")" value="@Model.EmailAddress" required maxlength="@AbpUserBase.MaxEmailAddressLength">
                                    <input type="text" class="form-control mb-2" placeholder="@L("UserName")" value="@Model.UserName" required maxlength="@AbpUserBase.MaxUserNameLength">
                                    <input type="password" class="form-control mb-2" placeholder="@L("Password")" required maxlength="@AbpUserBase.MaxPlainPasswordLength">
                                    <div class="custom-control custom-checkbox">
                                        <input type="checkbox" class="custom-control-input" id="auth-ligin" onclick="toggleRegisterButton()">
                                        <label class="custom-control-label" for="auth-ligin"><span>@L("AcceptTermsConditions")</span></label>
                                    </div>
                                    <div class="d-flex justify-content-between flex-sm-row flex-column">
                                        <button type="submit" id="RegisterButton" class="btn btn-primary btn-flat float-right">@L("Register")</button>
                                        <a asp-action="Login" class="btn bg-light-primary"><i class="fa fa-arrow-circle-left"></i> @L("Back")</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>
<script>
    function toggleRegisterButton() {
        var checkBox = document.getElementById("auth-login");
        var registerButton = document.getElementById("RegisterButton");

        if (checkBox.checked) {
            registerButton.disabled = false;
        } else {
            registerButton.disabled = true;
        }
    }

</script>